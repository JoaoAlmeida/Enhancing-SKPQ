##-----------------------------Search Parameters---------------------------------
#query.name=SKPQ-LD;RQ-LD;BRQ-LD;PSKPQ-LD;PRR-LD(re-order);PSM-LD
query.name = PSM-LD

query.city = LosAngeles

#Match method
#default (cosine similarity), fuzzy, jw (Jaro-Winkler) 
query.match = default

experiment.categoryName = JIS2020

#Experiment name
experiment.name = LosAngeles
#Directory where the experiments results are printed
experiment.output = output

#if true, more information is printed
experiment.debug = false

#Number of results, k
query.numResults = 20
#query.numResults = 5;10;15;20

#Preference paramenter (only for PSM)
query.alpha = 0.05
#query.alpha = 0.05;0.25;0.5;0.75;0.95

#Query Keywords Berlin
#query.keywords = amenity;natural;shop;bench;tourism;bicycle;information;waste;parking;berliner
#aleatorias a baixo:
#query.keywords = district;software;wedding;herb;door;pen;pension;development;resource;eagle
#query.keywords = amenity;natural;shop;bench;tourism;bicycle;information;waste;parking;berliner;district;software;wedding;herb;door;pen;pension;development;resource;eagle

#Query Keywords Los Angeles
#query.keywords = amenity;avenue;road;north;east;west;south;boulevard;place;natural
#aleatorias a baixo:
#query.keywords = architect;colony;publication;family;movie;photography;green;pension;nail;week
#query.keywords = amenity;avenue;road;north;east;west;south;boulevard;place;natural;architect;colony;publication;family;movie;photography;green;pension;nail;week

#Query Keywords Madrid
#query.keywords = amenity;avenida;natural;shop;plaza;parking;calle;restaurant;arroyo;camino
#aleatorias a baixo:
#query.keywords = route;performance;thought;interface;lose;stop;treatment;city;weight;birthday

#Query Keywords New York
#query.keywords = amenity;shop;street;bicycle;place;natural;tree;road;avenue;drive
#aleatorias a baixo:
#query.keywords = importance;food;perspective;concept;resource;queen;chemistry;apartment;department;database
#query.keywords = amenity;shop;street;bicycle;place;natural;tree;road;avenue;drive;importance;food;perspective;concept;resource;queen;chemistry;apartment;department;database

#Query Keywords London
#query.keywords = agency;phone;nike;aquarium;crash;secretary;field;medicine;father;tennis
#query.keywords = avenue;close;drive;lane;amenity;restaurant;road;shop;street;pub
#query.keywords = avenue;close;drive;lane;amenity;restaurant;road;shop;street;pub;agency;phone;nike;aquarium;crash;secretary;field;medicine;father;tennis

query.keywords = amenity avenue road north east;road north boulevard east west;east west north amenity south;south boulevard natural west amenity;place natural amenity avenue boulevard;architect colony avenue road place;publication family east south natural;movie photography south boulevard architect;green pension architect place colony;nail week colony natural publication;amenity road publication architect family;avenue north family colony movie;east south movie publication photography;boulevard natural photography family green;architect publication green movie pension;family photography pension green nail;green nail amenity photography week;pension week nail amenity avenue;nail photography week pension road;week movie amenity nail north;amenity avenue road north; road north boulevard east; east west north amenity; south boulevard natural west;place natural amenity avenue;architect colony avenue road;publication family east south;movie photography south boulevard;green pension architect place;nail week colony natural;amenity road publication architect;avenue north family colony;east south movie publication;boulevard natural photography family;architect publication green movie;family photography pension green;green nail amenity photography;pension week nail amenity;nail photography week pension;week movie amenity nail;amenity avenue road;road north boulevard;east west north;south boulevard natural;place natural amenity;architect colony avenue;publication family east;movie photography south;green pension architect;nail week colony;amenity road publication;avenue north family;east south movie;boulevard natural photography;architect publication green;family photography pension;green nail amenity;pension week nail;nail photography week;week movie amenity;amenity avenue;road north;east west;south boulevard;place natural;architect colony;publication family;movie photography;green pension;nail week;amenity road;avenue north;east south;boulevard natural;architect publication;family photography;green nail;pension week;nail photography;week movie
#query.keywords = 

#Object of interest category
query.category = hotel

#Neighborhood of interest
#nn=0, range=1, influence=2, pareto=3
#query.neighborhood = 1;2;3
query.neighborhood = 1

#Query range -- Valid only when query.neighborhood==1
#0.002 = 200m
#padrão = 1 km (0.01)
query.radius = 0.01

#To execute the same query many times
experiment.startRound=1
experiment.endRound=1

#Delete dataset after experiment?
experiment.deleteDataSet=no

##---------------------------Experimental Parameters----------------------------

#experiment.database = Dubai
#experiment.database = London
#experiment.database = New York
#experiment.database = Madrid
experiment.database = Los Angeles
#experiment.database = Berlin

#experiment.folder = indexDubai
#experiment.folder = indexLondon
#experiment.folder = indexMadrid
#experiment.folder = indexNewYork
experiment.folder = indexLosAngeles
#experiment.folder = indexBerlin

##----------------------------Dataset Parameters---------------------------------

#dataset.linkedPOIs = hotelLondon_LGD.txt
#dataset.linkedPOIs = ./london/LosAngelesLGD.txt

#não ta usando na PSKPQ e na SPKQ-LD
#dataset.objectsFile = hotelLondon.txt

srtree.dimensions = 2

srtree.cacheSize = 4

disk.blockSize = 4096

#The node reserves  6 bytes (1 short + 1 integer) to store node data plus 40
# bytes per entry (8 long id + 32 for rectangle), total per node=46
#  For page size of 4k, we have minNodeEntries=51 and maxNodeEntries=102
srtree.tree.minNodeCapacity = 51
srtree.tree.maxNodeCapacity = 102

##Max value in the dataset space
dataset.spaceMaxValue = 10000

##Restrict the number of tuples employed, should use a big value if all tuples are require
dataset.maxNumTuples = 1000000000
